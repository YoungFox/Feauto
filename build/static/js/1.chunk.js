webpackJsonp([1,5],{18:function(t,e,n){(function(e){"use strict";function i(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}var r=function(){function t(t,e){for(var n=0;n<e.length;n++){var i=e[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(t,i.key,i)}}return function(e,n,i){return n&&t(e.prototype,n),i&&t(e,i),e}}(),o=n(8),a=(n(19),n(21)),c=n(22),u=function(){function t(){i(this,t),this.title=c.title}return r(t,[{key:"init",value:function(){var t=o.template(a),n=t(c);e("body").prepend(n)}},{key:"show",value:function(){}}]),t}();t.exports=u}).call(e,n(1))},19:function(t,e,n){var i=n(20);"string"==typeof i&&(i=[[t.id,i,""]]);n(7)(i,{});i.locals&&(t.exports=i.locals)},20:function(t,e,n){e=t.exports=n(6)(),e.push([t.id,".header{height:40px;background:#0275d8;color:#fff;text-align:center;line-height:40px}",""])},21:function(t,e,n){"use strict";var i='<div class="header">{{=it.title}}</div>';n(8);t.exports=i},22:function(t,e){"use strict";var n={title:"组件 #header# 的title"};t.exports=n}});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,